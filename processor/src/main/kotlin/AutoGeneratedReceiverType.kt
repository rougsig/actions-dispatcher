package com.github.rougsig.actionsdispatcher.processor

import com.github.rougsig.actionsdispatcher.annotations.ActionElement
import javax.lang.model.element.TypeElement

internal class AutoGeneratedReceiverType(
  simpleName: String,
  canonicalName: String,
  packageName: String,
  processFunctions: Map<TypeElement, String>
) : ReceiverType(simpleName, canonicalName, packageName, processFunctions) {
  companion object {
    fun get(
      actionType: ActionType,
      actionElementProvider: ActionElementProvider
    ): AutoGeneratedReceiverType {
      val packageName = actionType.packageName
      val simpleName = actionElementProvider.receiverName
      val canonicalName = "$packageName.$simpleName"
      val prefix = actionElementProvider.prefix

      val processFunctions = HashMap<TypeElement, String>()
      actionType.actions.forEach {
        processFunctions[it] = "$prefix${it.simpleName}"
      }

      return AutoGeneratedReceiverType(simpleName, canonicalName, packageName, processFunctions)
    }
  }
}