package com.github.rougsig.actionsdispatcher.processor

import com.squareup.kotlinpoet.*

internal class ActionReceiverGenerator(
  private val receiverType: AutoGeneratedReceiverType,
  private val actionType: ActionType,
  private val actionElementProvider: ActionElementProvider
) : Generator {
  override fun generateFile(): FileSpec {
    return FileSpec.builder(receiverType.packageName, receiverType.simpleName)
      .addType(TypeSpec.interfaceBuilder(receiverType.simpleName)
        .apply { if (actionType.isInternal) addModifiers(KModifier.INTERNAL) }
        .addFunctions(receiverType.processFunctions.map { (action, funName) ->
          FunSpec.builder(funName)
            .addParameter(PREVIOUS_STATE_PARAMETER_NAME, actionElementProvider.stateName)
            .addParameter(ACTION_PARAMETER_NAME, action.asType().asTypeName())
            .returns(actionElementProvider.nullableStateCommandPairName)
            .apply {
              if (actionElementProvider.generateDefaultReceiverImplementation) {
                addCode("return $PREVIOUS_STATE_PARAMETER_NAME to null")
              } else {
                addModifiers(KModifier.ABSTRACT)
              }
            }
            .build()
        })
        .build())
      .build()
  }
}

private const val PREVIOUS_STATE_PARAMETER_NAME = "previousState"
private const val ACTION_PARAMETER_NAME = "action"